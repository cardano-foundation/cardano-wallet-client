-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation getNetworkParameters
module Wallet.Operations.GetNetworkParameters where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Wallet.Common
import Wallet.Types

-- | > GET /network/parameters
-- 
-- \<p align=\"right\">status: \<strong>stable\<\/strong>\<\/p>
-- 
-- Returns the set of network parameters for the current epoch.
getNetworkParameters :: forall m . Wallet.Common.MonadHTTP m => Wallet.Common.ClientT m (Network.HTTP.Client.Types.Response GetNetworkParametersResponse) -- ^ Monadic computation which returns the result of the operation
getNetworkParameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either GetNetworkParametersResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetNetworkParametersResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                          GetNetworkParametersResponseBody200)
                                                                                                                                                                      | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 406) (Network.HTTP.Client.Types.responseStatus response) -> GetNetworkParametersResponse406 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                          GetNetworkParametersResponseBody406)
                                                                                                                                                                      | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (Wallet.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") "/network/parameters" GHC.Base.mempty)
-- | Represents a response of the operation 'getNetworkParameters'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetNetworkParametersResponseError' is used.
data GetNetworkParametersResponse =
   GetNetworkParametersResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | GetNetworkParametersResponse200 GetNetworkParametersResponseBody200 -- ^ Ok
  | GetNetworkParametersResponse406 GetNetworkParametersResponseBody406 -- ^ Not Acceptable
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200 = GetNetworkParametersResponseBody200 {
  -- | active_slot_coefficient
  getNetworkParametersResponseBody200Active_slot_coefficient :: GetNetworkParametersResponseBody200Active_slot_coefficient
  -- | blockchain_start_time
  , getNetworkParametersResponseBody200Blockchain_start_time :: Data.Text.Internal.Text
  -- | decentralization_level
  , getNetworkParametersResponseBody200Decentralization_level :: GetNetworkParametersResponseBody200Decentralization_level
  -- | desired_pool_number
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  , getNetworkParametersResponseBody200Desired_pool_number :: GHC.Types.Int
  -- | epoch_length
  , getNetworkParametersResponseBody200Epoch_length :: GetNetworkParametersResponseBody200Epoch_length
  -- | eras: 
  -- If and when each era started or will start.
  -- 
  -- The object is keyed by era names. The values either describe the epoch boundary
  -- when the era starts (can be in the future or in the past), or are null if not yet
  -- confirmed on-chain.
  -- 
  -- If you need to know the current era, see the \`node_era\` field of
  -- \`GET \/network\/information\`.
  -- 
  -- > Due to complications with our current tooling, we cannot mark the era names
  -- > as required, but the keys are in fact always present.
  , getNetworkParametersResponseBody200Eras :: GetNetworkParametersResponseBody200Eras
  -- | execution_unit_prices: The price of time unit and memory unit used for calculating a fee of a script execution.
  , getNetworkParametersResponseBody200Execution_unit_prices :: (GHC.Maybe.Maybe GetNetworkParametersResponseBody200Execution_unit_prices)
  -- | genesis_block_hash: The hash of a block
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 64
  -- * Minimum length of 64
  , getNetworkParametersResponseBody200Genesis_block_hash :: Data.Text.Internal.Text
  -- | maximum_collateral_input_count: The maximum number of collateral inputs that can be used in a single
  -- transaction.
  -- 
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  , getNetworkParametersResponseBody200Maximum_collateral_input_count :: GHC.Types.Int
  -- | maximum_token_bundle_size: The maximum size of a serialized \`TokenBundle\`. The concept was added in Mary where
  -- it was hard-coded to 4000 bytes. In Alonzo it was made an updateable protocol parameter (\`_maxValSize\`).
  , getNetworkParametersResponseBody200Maximum_token_bundle_size :: GetNetworkParametersResponseBody200Maximum_token_bundle_size
  -- | minimum_collateral_percentage: The minimum required amount of collateral as a percentage of the
  -- total transaction fee.
  -- 
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  , getNetworkParametersResponseBody200Minimum_collateral_percentage :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | security_parameter
  , getNetworkParametersResponseBody200Security_parameter :: GetNetworkParametersResponseBody200Security_parameter
  -- | slot_length
  , getNetworkParametersResponseBody200Slot_length :: GetNetworkParametersResponseBody200Slot_length
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["active_slot_coefficient" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Active_slot_coefficient obj] : ["blockchain_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Blockchain_start_time obj] : ["decentralization_level" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Decentralization_level obj] : ["desired_pool_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Desired_pool_number obj] : ["epoch_length" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Epoch_length obj] : ["eras" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Eras obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("execution_unit_prices" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200Execution_unit_prices obj) : ["genesis_block_hash" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Genesis_block_hash obj] : ["maximum_collateral_input_count" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Maximum_collateral_input_count obj] : ["maximum_token_bundle_size" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Maximum_token_bundle_size obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("minimum_collateral_percentage" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200Minimum_collateral_percentage obj) : ["security_parameter" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Security_parameter obj] : ["slot_length" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Slot_length obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["active_slot_coefficient" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Active_slot_coefficient obj] : ["blockchain_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Blockchain_start_time obj] : ["decentralization_level" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Decentralization_level obj] : ["desired_pool_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Desired_pool_number obj] : ["epoch_length" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Epoch_length obj] : ["eras" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Eras obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("execution_unit_prices" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200Execution_unit_prices obj) : ["genesis_block_hash" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Genesis_block_hash obj] : ["maximum_collateral_input_count" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Maximum_collateral_input_count obj] : ["maximum_token_bundle_size" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Maximum_token_bundle_size obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("minimum_collateral_percentage" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200Minimum_collateral_percentage obj) : ["security_parameter" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Security_parameter obj] : ["slot_length" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Slot_length obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200" (\obj -> ((((((((((((GHC.Base.pure GetNetworkParametersResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "active_slot_coefficient")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "blockchain_start_time")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "decentralization_level")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "desired_pool_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_length")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "eras")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "execution_unit_prices")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "genesis_block_hash")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "maximum_collateral_input_count")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "maximum_token_bundle_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "minimum_collateral_percentage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "security_parameter")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "slot_length"))
-- | Create a new 'GetNetworkParametersResponseBody200' with all required fields.
mkGetNetworkParametersResponseBody200 :: GetNetworkParametersResponseBody200Active_slot_coefficient -- ^ 'getNetworkParametersResponseBody200Active_slot_coefficient'
  -> Data.Text.Internal.Text -- ^ 'getNetworkParametersResponseBody200Blockchain_start_time'
  -> GetNetworkParametersResponseBody200Decentralization_level -- ^ 'getNetworkParametersResponseBody200Decentralization_level'
  -> GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200Desired_pool_number'
  -> GetNetworkParametersResponseBody200Epoch_length -- ^ 'getNetworkParametersResponseBody200Epoch_length'
  -> GetNetworkParametersResponseBody200Eras -- ^ 'getNetworkParametersResponseBody200Eras'
  -> Data.Text.Internal.Text -- ^ 'getNetworkParametersResponseBody200Genesis_block_hash'
  -> GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200Maximum_collateral_input_count'
  -> GetNetworkParametersResponseBody200Maximum_token_bundle_size -- ^ 'getNetworkParametersResponseBody200Maximum_token_bundle_size'
  -> GetNetworkParametersResponseBody200Security_parameter -- ^ 'getNetworkParametersResponseBody200Security_parameter'
  -> GetNetworkParametersResponseBody200Slot_length -- ^ 'getNetworkParametersResponseBody200Slot_length'
  -> GetNetworkParametersResponseBody200
mkGetNetworkParametersResponseBody200 getNetworkParametersResponseBody200Active_slot_coefficient getNetworkParametersResponseBody200Blockchain_start_time getNetworkParametersResponseBody200Decentralization_level getNetworkParametersResponseBody200Desired_pool_number getNetworkParametersResponseBody200Epoch_length getNetworkParametersResponseBody200Eras getNetworkParametersResponseBody200Genesis_block_hash getNetworkParametersResponseBody200Maximum_collateral_input_count getNetworkParametersResponseBody200Maximum_token_bundle_size getNetworkParametersResponseBody200Security_parameter getNetworkParametersResponseBody200Slot_length = GetNetworkParametersResponseBody200{getNetworkParametersResponseBody200Active_slot_coefficient = getNetworkParametersResponseBody200Active_slot_coefficient,
getNetworkParametersResponseBody200Blockchain_start_time = getNetworkParametersResponseBody200Blockchain_start_time,
getNetworkParametersResponseBody200Decentralization_level = getNetworkParametersResponseBody200Decentralization_level,
getNetworkParametersResponseBody200Desired_pool_number = getNetworkParametersResponseBody200Desired_pool_number,
getNetworkParametersResponseBody200Epoch_length = getNetworkParametersResponseBody200Epoch_length,
getNetworkParametersResponseBody200Eras = getNetworkParametersResponseBody200Eras,
getNetworkParametersResponseBody200Execution_unit_prices = GHC.Maybe.Nothing,
getNetworkParametersResponseBody200Genesis_block_hash = getNetworkParametersResponseBody200Genesis_block_hash,
getNetworkParametersResponseBody200Maximum_collateral_input_count = getNetworkParametersResponseBody200Maximum_collateral_input_count,
getNetworkParametersResponseBody200Maximum_token_bundle_size = getNetworkParametersResponseBody200Maximum_token_bundle_size,
getNetworkParametersResponseBody200Minimum_collateral_percentage = GHC.Maybe.Nothing,
getNetworkParametersResponseBody200Security_parameter = getNetworkParametersResponseBody200Security_parameter,
getNetworkParametersResponseBody200Slot_length = getNetworkParametersResponseBody200Slot_length}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.active_slot_coefficient@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200Active_slot_coefficient = GetNetworkParametersResponseBody200Active_slot_coefficient {
  -- | quantity
  -- 
  -- Constraints:
  -- 
  -- * Maxium  of 100.0
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200Active_slot_coefficientQuantity :: GHC.Types.Double
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200Active_slot_coefficient
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["quantity" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Active_slot_coefficientQuantity obj] : ["unit" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "percent"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["quantity" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Active_slot_coefficientQuantity obj] : ["unit" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "percent"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200Active_slot_coefficient
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200Active_slot_coefficient" (\obj -> GHC.Base.pure GetNetworkParametersResponseBody200Active_slot_coefficient GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quantity"))
-- | Create a new 'GetNetworkParametersResponseBody200Active_slot_coefficient' with all required fields.
mkGetNetworkParametersResponseBody200Active_slot_coefficient :: GHC.Types.Double -- ^ 'getNetworkParametersResponseBody200Active_slot_coefficientQuantity'
  -> GetNetworkParametersResponseBody200Active_slot_coefficient
mkGetNetworkParametersResponseBody200Active_slot_coefficient getNetworkParametersResponseBody200Active_slot_coefficientQuantity = GetNetworkParametersResponseBody200Active_slot_coefficient{getNetworkParametersResponseBody200Active_slot_coefficientQuantity = getNetworkParametersResponseBody200Active_slot_coefficientQuantity}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.decentralization_level@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200Decentralization_level = GetNetworkParametersResponseBody200Decentralization_level {
  -- | quantity
  -- 
  -- Constraints:
  -- 
  -- * Maxium  of 100.0
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200Decentralization_levelQuantity :: GHC.Types.Double
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200Decentralization_level
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["quantity" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Decentralization_levelQuantity obj] : ["unit" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "percent"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["quantity" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Decentralization_levelQuantity obj] : ["unit" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "percent"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200Decentralization_level
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200Decentralization_level" (\obj -> GHC.Base.pure GetNetworkParametersResponseBody200Decentralization_level GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quantity"))
-- | Create a new 'GetNetworkParametersResponseBody200Decentralization_level' with all required fields.
mkGetNetworkParametersResponseBody200Decentralization_level :: GHC.Types.Double -- ^ 'getNetworkParametersResponseBody200Decentralization_levelQuantity'
  -> GetNetworkParametersResponseBody200Decentralization_level
mkGetNetworkParametersResponseBody200Decentralization_level getNetworkParametersResponseBody200Decentralization_levelQuantity = GetNetworkParametersResponseBody200Decentralization_level{getNetworkParametersResponseBody200Decentralization_levelQuantity = getNetworkParametersResponseBody200Decentralization_levelQuantity}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.epoch_length@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200Epoch_length = GetNetworkParametersResponseBody200Epoch_length {
  -- | quantity
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200Epoch_lengthQuantity :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200Epoch_length
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["quantity" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Epoch_lengthQuantity obj] : ["unit" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "slot"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["quantity" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Epoch_lengthQuantity obj] : ["unit" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "slot"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200Epoch_length
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200Epoch_length" (\obj -> GHC.Base.pure GetNetworkParametersResponseBody200Epoch_length GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quantity"))
-- | Create a new 'GetNetworkParametersResponseBody200Epoch_length' with all required fields.
mkGetNetworkParametersResponseBody200Epoch_length :: GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200Epoch_lengthQuantity'
  -> GetNetworkParametersResponseBody200Epoch_length
mkGetNetworkParametersResponseBody200Epoch_length getNetworkParametersResponseBody200Epoch_lengthQuantity = GetNetworkParametersResponseBody200Epoch_length{getNetworkParametersResponseBody200Epoch_lengthQuantity = getNetworkParametersResponseBody200Epoch_lengthQuantity}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.eras@ in the specification.
-- 
-- 
-- If and when each era started or will start.
-- 
-- The object is keyed by era names. The values either describe the epoch boundary
-- when the era starts (can be in the future or in the past), or are null if not yet
-- confirmed on-chain.
-- 
-- If you need to know the current era, see the \`node_era\` field of
-- \`GET \/network\/information\`.
-- 
-- > Due to complications with our current tooling, we cannot mark the era names
-- > as required, but the keys are in fact always present.
data GetNetworkParametersResponseBody200Eras = GetNetworkParametersResponseBody200Eras {
  -- | allegra
  getNetworkParametersResponseBody200ErasAllegra :: (GHC.Maybe.Maybe (Wallet.Common.Nullable GetNetworkParametersResponseBody200ErasAllegraNonNullable))
  -- | alonzo
  , getNetworkParametersResponseBody200ErasAlonzo :: (GHC.Maybe.Maybe (Wallet.Common.Nullable GetNetworkParametersResponseBody200ErasAlonzoNonNullable))
  -- | babbage
  , getNetworkParametersResponseBody200ErasBabbage :: (GHC.Maybe.Maybe (Wallet.Common.Nullable GetNetworkParametersResponseBody200ErasBabbageNonNullable))
  -- | byron
  , getNetworkParametersResponseBody200ErasByron :: (GHC.Maybe.Maybe (Wallet.Common.Nullable GetNetworkParametersResponseBody200ErasByronNonNullable))
  -- | conway
  , getNetworkParametersResponseBody200ErasConway :: (GHC.Maybe.Maybe (Wallet.Common.Nullable GetNetworkParametersResponseBody200ErasConwayNonNullable))
  -- | mary
  , getNetworkParametersResponseBody200ErasMary :: (GHC.Maybe.Maybe (Wallet.Common.Nullable GetNetworkParametersResponseBody200ErasMaryNonNullable))
  -- | shelley
  , getNetworkParametersResponseBody200ErasShelley :: (GHC.Maybe.Maybe (Wallet.Common.Nullable GetNetworkParametersResponseBody200ErasShelleyNonNullable))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200Eras
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allegra" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200ErasAllegra obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alonzo" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200ErasAlonzo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("babbage" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200ErasBabbage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("byron" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200ErasByron obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("conway" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200ErasConway obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mary" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200ErasMary obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shelley" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200ErasShelley obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allegra" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200ErasAllegra obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alonzo" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200ErasAlonzo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("babbage" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200ErasBabbage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("byron" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200ErasByron obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("conway" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200ErasConway obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mary" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200ErasMary obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shelley" Data.Aeson.Types.ToJSON..=)) (getNetworkParametersResponseBody200ErasShelley obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200Eras
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200Eras" (\obj -> ((((((GHC.Base.pure GetNetworkParametersResponseBody200Eras GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "allegra")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alonzo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "babbage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "byron")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "conway")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mary")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shelley"))
-- | Create a new 'GetNetworkParametersResponseBody200Eras' with all required fields.
mkGetNetworkParametersResponseBody200Eras :: GetNetworkParametersResponseBody200Eras
mkGetNetworkParametersResponseBody200Eras = GetNetworkParametersResponseBody200Eras{getNetworkParametersResponseBody200ErasAllegra = GHC.Maybe.Nothing,
                                                                                    getNetworkParametersResponseBody200ErasAlonzo = GHC.Maybe.Nothing,
                                                                                    getNetworkParametersResponseBody200ErasBabbage = GHC.Maybe.Nothing,
                                                                                    getNetworkParametersResponseBody200ErasByron = GHC.Maybe.Nothing,
                                                                                    getNetworkParametersResponseBody200ErasConway = GHC.Maybe.Nothing,
                                                                                    getNetworkParametersResponseBody200ErasMary = GHC.Maybe.Nothing,
                                                                                    getNetworkParametersResponseBody200ErasShelley = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.eras.properties.allegra@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200ErasAllegraNonNullable = GetNetworkParametersResponseBody200ErasAllegraNonNullable {
  -- | epoch_number: An epoch is a time period which is divided into slots.
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200ErasAllegraNonNullableEpoch_number :: GHC.Types.Int
  -- | epoch_start_time
  , getNetworkParametersResponseBody200ErasAllegraNonNullableEpoch_start_time :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200ErasAllegraNonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["epoch_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasAllegraNonNullableEpoch_number obj] : ["epoch_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasAllegraNonNullableEpoch_start_time obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["epoch_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasAllegraNonNullableEpoch_number obj] : ["epoch_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasAllegraNonNullableEpoch_start_time obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200ErasAllegraNonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200ErasAllegraNonNullable" (\obj -> (GHC.Base.pure GetNetworkParametersResponseBody200ErasAllegraNonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_start_time"))
-- | Create a new 'GetNetworkParametersResponseBody200ErasAllegraNonNullable' with all required fields.
mkGetNetworkParametersResponseBody200ErasAllegraNonNullable :: GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200ErasAllegraNonNullableEpoch_number'
  -> Data.Text.Internal.Text -- ^ 'getNetworkParametersResponseBody200ErasAllegraNonNullableEpoch_start_time'
  -> GetNetworkParametersResponseBody200ErasAllegraNonNullable
mkGetNetworkParametersResponseBody200ErasAllegraNonNullable getNetworkParametersResponseBody200ErasAllegraNonNullableEpoch_number getNetworkParametersResponseBody200ErasAllegraNonNullableEpoch_start_time = GetNetworkParametersResponseBody200ErasAllegraNonNullable{getNetworkParametersResponseBody200ErasAllegraNonNullableEpoch_number = getNetworkParametersResponseBody200ErasAllegraNonNullableEpoch_number,
                                                                                                                                                                                                                                                                        getNetworkParametersResponseBody200ErasAllegraNonNullableEpoch_start_time = getNetworkParametersResponseBody200ErasAllegraNonNullableEpoch_start_time}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.eras.properties.alonzo@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200ErasAlonzoNonNullable = GetNetworkParametersResponseBody200ErasAlonzoNonNullable {
  -- | epoch_number: An epoch is a time period which is divided into slots.
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200ErasAlonzoNonNullableEpoch_number :: GHC.Types.Int
  -- | epoch_start_time
  , getNetworkParametersResponseBody200ErasAlonzoNonNullableEpoch_start_time :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200ErasAlonzoNonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["epoch_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasAlonzoNonNullableEpoch_number obj] : ["epoch_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasAlonzoNonNullableEpoch_start_time obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["epoch_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasAlonzoNonNullableEpoch_number obj] : ["epoch_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasAlonzoNonNullableEpoch_start_time obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200ErasAlonzoNonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200ErasAlonzoNonNullable" (\obj -> (GHC.Base.pure GetNetworkParametersResponseBody200ErasAlonzoNonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_start_time"))
-- | Create a new 'GetNetworkParametersResponseBody200ErasAlonzoNonNullable' with all required fields.
mkGetNetworkParametersResponseBody200ErasAlonzoNonNullable :: GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200ErasAlonzoNonNullableEpoch_number'
  -> Data.Text.Internal.Text -- ^ 'getNetworkParametersResponseBody200ErasAlonzoNonNullableEpoch_start_time'
  -> GetNetworkParametersResponseBody200ErasAlonzoNonNullable
mkGetNetworkParametersResponseBody200ErasAlonzoNonNullable getNetworkParametersResponseBody200ErasAlonzoNonNullableEpoch_number getNetworkParametersResponseBody200ErasAlonzoNonNullableEpoch_start_time = GetNetworkParametersResponseBody200ErasAlonzoNonNullable{getNetworkParametersResponseBody200ErasAlonzoNonNullableEpoch_number = getNetworkParametersResponseBody200ErasAlonzoNonNullableEpoch_number,
                                                                                                                                                                                                                                                                    getNetworkParametersResponseBody200ErasAlonzoNonNullableEpoch_start_time = getNetworkParametersResponseBody200ErasAlonzoNonNullableEpoch_start_time}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.eras.properties.babbage@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200ErasBabbageNonNullable = GetNetworkParametersResponseBody200ErasBabbageNonNullable {
  -- | epoch_number: An epoch is a time period which is divided into slots.
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200ErasBabbageNonNullableEpoch_number :: GHC.Types.Int
  -- | epoch_start_time
  , getNetworkParametersResponseBody200ErasBabbageNonNullableEpoch_start_time :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200ErasBabbageNonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["epoch_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasBabbageNonNullableEpoch_number obj] : ["epoch_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasBabbageNonNullableEpoch_start_time obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["epoch_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasBabbageNonNullableEpoch_number obj] : ["epoch_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasBabbageNonNullableEpoch_start_time obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200ErasBabbageNonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200ErasBabbageNonNullable" (\obj -> (GHC.Base.pure GetNetworkParametersResponseBody200ErasBabbageNonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_start_time"))
-- | Create a new 'GetNetworkParametersResponseBody200ErasBabbageNonNullable' with all required fields.
mkGetNetworkParametersResponseBody200ErasBabbageNonNullable :: GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200ErasBabbageNonNullableEpoch_number'
  -> Data.Text.Internal.Text -- ^ 'getNetworkParametersResponseBody200ErasBabbageNonNullableEpoch_start_time'
  -> GetNetworkParametersResponseBody200ErasBabbageNonNullable
mkGetNetworkParametersResponseBody200ErasBabbageNonNullable getNetworkParametersResponseBody200ErasBabbageNonNullableEpoch_number getNetworkParametersResponseBody200ErasBabbageNonNullableEpoch_start_time = GetNetworkParametersResponseBody200ErasBabbageNonNullable{getNetworkParametersResponseBody200ErasBabbageNonNullableEpoch_number = getNetworkParametersResponseBody200ErasBabbageNonNullableEpoch_number,
                                                                                                                                                                                                                                                                        getNetworkParametersResponseBody200ErasBabbageNonNullableEpoch_start_time = getNetworkParametersResponseBody200ErasBabbageNonNullableEpoch_start_time}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.eras.properties.byron@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200ErasByronNonNullable = GetNetworkParametersResponseBody200ErasByronNonNullable {
  -- | epoch_number: An epoch is a time period which is divided into slots.
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200ErasByronNonNullableEpoch_number :: GHC.Types.Int
  -- | epoch_start_time
  , getNetworkParametersResponseBody200ErasByronNonNullableEpoch_start_time :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200ErasByronNonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["epoch_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasByronNonNullableEpoch_number obj] : ["epoch_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasByronNonNullableEpoch_start_time obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["epoch_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasByronNonNullableEpoch_number obj] : ["epoch_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasByronNonNullableEpoch_start_time obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200ErasByronNonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200ErasByronNonNullable" (\obj -> (GHC.Base.pure GetNetworkParametersResponseBody200ErasByronNonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_start_time"))
-- | Create a new 'GetNetworkParametersResponseBody200ErasByronNonNullable' with all required fields.
mkGetNetworkParametersResponseBody200ErasByronNonNullable :: GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200ErasByronNonNullableEpoch_number'
  -> Data.Text.Internal.Text -- ^ 'getNetworkParametersResponseBody200ErasByronNonNullableEpoch_start_time'
  -> GetNetworkParametersResponseBody200ErasByronNonNullable
mkGetNetworkParametersResponseBody200ErasByronNonNullable getNetworkParametersResponseBody200ErasByronNonNullableEpoch_number getNetworkParametersResponseBody200ErasByronNonNullableEpoch_start_time = GetNetworkParametersResponseBody200ErasByronNonNullable{getNetworkParametersResponseBody200ErasByronNonNullableEpoch_number = getNetworkParametersResponseBody200ErasByronNonNullableEpoch_number,
                                                                                                                                                                                                                                                                getNetworkParametersResponseBody200ErasByronNonNullableEpoch_start_time = getNetworkParametersResponseBody200ErasByronNonNullableEpoch_start_time}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.eras.properties.conway@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200ErasConwayNonNullable = GetNetworkParametersResponseBody200ErasConwayNonNullable {
  -- | epoch_number: An epoch is a time period which is divided into slots.
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200ErasConwayNonNullableEpoch_number :: GHC.Types.Int
  -- | epoch_start_time
  , getNetworkParametersResponseBody200ErasConwayNonNullableEpoch_start_time :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200ErasConwayNonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["epoch_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasConwayNonNullableEpoch_number obj] : ["epoch_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasConwayNonNullableEpoch_start_time obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["epoch_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasConwayNonNullableEpoch_number obj] : ["epoch_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasConwayNonNullableEpoch_start_time obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200ErasConwayNonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200ErasConwayNonNullable" (\obj -> (GHC.Base.pure GetNetworkParametersResponseBody200ErasConwayNonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_start_time"))
-- | Create a new 'GetNetworkParametersResponseBody200ErasConwayNonNullable' with all required fields.
mkGetNetworkParametersResponseBody200ErasConwayNonNullable :: GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200ErasConwayNonNullableEpoch_number'
  -> Data.Text.Internal.Text -- ^ 'getNetworkParametersResponseBody200ErasConwayNonNullableEpoch_start_time'
  -> GetNetworkParametersResponseBody200ErasConwayNonNullable
mkGetNetworkParametersResponseBody200ErasConwayNonNullable getNetworkParametersResponseBody200ErasConwayNonNullableEpoch_number getNetworkParametersResponseBody200ErasConwayNonNullableEpoch_start_time = GetNetworkParametersResponseBody200ErasConwayNonNullable{getNetworkParametersResponseBody200ErasConwayNonNullableEpoch_number = getNetworkParametersResponseBody200ErasConwayNonNullableEpoch_number,
                                                                                                                                                                                                                                                                    getNetworkParametersResponseBody200ErasConwayNonNullableEpoch_start_time = getNetworkParametersResponseBody200ErasConwayNonNullableEpoch_start_time}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.eras.properties.mary@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200ErasMaryNonNullable = GetNetworkParametersResponseBody200ErasMaryNonNullable {
  -- | epoch_number: An epoch is a time period which is divided into slots.
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200ErasMaryNonNullableEpoch_number :: GHC.Types.Int
  -- | epoch_start_time
  , getNetworkParametersResponseBody200ErasMaryNonNullableEpoch_start_time :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200ErasMaryNonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["epoch_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasMaryNonNullableEpoch_number obj] : ["epoch_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasMaryNonNullableEpoch_start_time obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["epoch_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasMaryNonNullableEpoch_number obj] : ["epoch_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasMaryNonNullableEpoch_start_time obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200ErasMaryNonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200ErasMaryNonNullable" (\obj -> (GHC.Base.pure GetNetworkParametersResponseBody200ErasMaryNonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_start_time"))
-- | Create a new 'GetNetworkParametersResponseBody200ErasMaryNonNullable' with all required fields.
mkGetNetworkParametersResponseBody200ErasMaryNonNullable :: GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200ErasMaryNonNullableEpoch_number'
  -> Data.Text.Internal.Text -- ^ 'getNetworkParametersResponseBody200ErasMaryNonNullableEpoch_start_time'
  -> GetNetworkParametersResponseBody200ErasMaryNonNullable
mkGetNetworkParametersResponseBody200ErasMaryNonNullable getNetworkParametersResponseBody200ErasMaryNonNullableEpoch_number getNetworkParametersResponseBody200ErasMaryNonNullableEpoch_start_time = GetNetworkParametersResponseBody200ErasMaryNonNullable{getNetworkParametersResponseBody200ErasMaryNonNullableEpoch_number = getNetworkParametersResponseBody200ErasMaryNonNullableEpoch_number,
                                                                                                                                                                                                                                                            getNetworkParametersResponseBody200ErasMaryNonNullableEpoch_start_time = getNetworkParametersResponseBody200ErasMaryNonNullableEpoch_start_time}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.eras.properties.shelley@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200ErasShelleyNonNullable = GetNetworkParametersResponseBody200ErasShelleyNonNullable {
  -- | epoch_number: An epoch is a time period which is divided into slots.
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200ErasShelleyNonNullableEpoch_number :: GHC.Types.Int
  -- | epoch_start_time
  , getNetworkParametersResponseBody200ErasShelleyNonNullableEpoch_start_time :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200ErasShelleyNonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["epoch_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasShelleyNonNullableEpoch_number obj] : ["epoch_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasShelleyNonNullableEpoch_start_time obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["epoch_number" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasShelleyNonNullableEpoch_number obj] : ["epoch_start_time" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200ErasShelleyNonNullableEpoch_start_time obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200ErasShelleyNonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200ErasShelleyNonNullable" (\obj -> (GHC.Base.pure GetNetworkParametersResponseBody200ErasShelleyNonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_start_time"))
-- | Create a new 'GetNetworkParametersResponseBody200ErasShelleyNonNullable' with all required fields.
mkGetNetworkParametersResponseBody200ErasShelleyNonNullable :: GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200ErasShelleyNonNullableEpoch_number'
  -> Data.Text.Internal.Text -- ^ 'getNetworkParametersResponseBody200ErasShelleyNonNullableEpoch_start_time'
  -> GetNetworkParametersResponseBody200ErasShelleyNonNullable
mkGetNetworkParametersResponseBody200ErasShelleyNonNullable getNetworkParametersResponseBody200ErasShelleyNonNullableEpoch_number getNetworkParametersResponseBody200ErasShelleyNonNullableEpoch_start_time = GetNetworkParametersResponseBody200ErasShelleyNonNullable{getNetworkParametersResponseBody200ErasShelleyNonNullableEpoch_number = getNetworkParametersResponseBody200ErasShelleyNonNullableEpoch_number,
                                                                                                                                                                                                                                                                        getNetworkParametersResponseBody200ErasShelleyNonNullableEpoch_start_time = getNetworkParametersResponseBody200ErasShelleyNonNullableEpoch_start_time}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.execution_unit_prices@ in the specification.
-- 
-- The price of time unit and memory unit used for calculating a fee of a script execution.
data GetNetworkParametersResponseBody200Execution_unit_prices = GetNetworkParametersResponseBody200Execution_unit_prices {
  -- | memory_unit_price
  getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_price :: GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceVariants
  -- | step_price
  , getNetworkParametersResponseBody200Execution_unit_pricesStep_price :: GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceVariants
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200Execution_unit_prices
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["memory_unit_price" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_price obj] : ["step_price" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Execution_unit_pricesStep_price obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["memory_unit_price" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_price obj] : ["step_price" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Execution_unit_pricesStep_price obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200Execution_unit_prices
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200Execution_unit_prices" (\obj -> (GHC.Base.pure GetNetworkParametersResponseBody200Execution_unit_prices GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "memory_unit_price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "step_price"))
-- | Create a new 'GetNetworkParametersResponseBody200Execution_unit_prices' with all required fields.
mkGetNetworkParametersResponseBody200Execution_unit_prices :: GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceVariants -- ^ 'getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_price'
  -> GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceVariants -- ^ 'getNetworkParametersResponseBody200Execution_unit_pricesStep_price'
  -> GetNetworkParametersResponseBody200Execution_unit_prices
mkGetNetworkParametersResponseBody200Execution_unit_prices getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_price getNetworkParametersResponseBody200Execution_unit_pricesStep_price = GetNetworkParametersResponseBody200Execution_unit_prices{getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_price = getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_price,
                                                                                                                                                                                                                                                                   getNetworkParametersResponseBody200Execution_unit_pricesStep_price = getNetworkParametersResponseBody200Execution_unit_pricesStep_price}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.execution_unit_prices.properties.memory_unit_price.oneOf@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2 = GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2 {
  -- | denominator
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2Denominator :: GHC.Types.Int
  -- | numerator
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  , getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2Numerator :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["denominator" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2Denominator obj] : ["numerator" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2Numerator obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["denominator" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2Denominator obj] : ["numerator" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2Numerator obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2" (\obj -> (GHC.Base.pure GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "denominator")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "numerator"))
-- | Create a new 'GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2' with all required fields.
mkGetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2 :: GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2Denominator'
  -> GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2Numerator'
  -> GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2
mkGetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2 getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2Denominator getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2Numerator = GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2{getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2Denominator = getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2Denominator,
                                                                                                                                                                                                                                                                                                                                                        getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2Numerator = getNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2Numerator}
-- | Defines the oneOf schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.execution_unit_prices.properties.memory_unit_price.oneOf@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceVariants =
   GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceVariant1 GHC.Types.Double
  | GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceVariant2 GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceOneOf2
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceVariants
    where toJSON (GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceVariant1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceVariant2 a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceVariants
    where parseJSON val = case (GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceVariant1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetNetworkParametersResponseBody200Execution_unit_pricesMemory_unit_priceVariant2 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.execution_unit_prices.properties.step_price.oneOf@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2 = GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2 {
  -- | denominator
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2Denominator :: GHC.Types.Int
  -- | numerator
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  , getNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2Numerator :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["denominator" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2Denominator obj] : ["numerator" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2Numerator obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["denominator" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2Denominator obj] : ["numerator" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2Numerator obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2" (\obj -> (GHC.Base.pure GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "denominator")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "numerator"))
-- | Create a new 'GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2' with all required fields.
mkGetNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2 :: GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2Denominator'
  -> GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2Numerator'
  -> GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2
mkGetNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2 getNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2Denominator getNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2Numerator = GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2{getNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2Denominator = getNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2Denominator,
                                                                                                                                                                                                                                                                                                                            getNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2Numerator = getNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2Numerator}
-- | Defines the oneOf schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.execution_unit_prices.properties.step_price.oneOf@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceVariants =
   GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceVariant1 GHC.Types.Double
  | GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceVariant2 GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceOneOf2
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceVariants
    where toJSON (GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceVariant1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceVariant2 a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceVariants
    where parseJSON val = case (GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceVariant1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetNetworkParametersResponseBody200Execution_unit_pricesStep_priceVariant2 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.maximum_token_bundle_size@ in the specification.
-- 
-- The maximum size of a serialized \`TokenBundle\`. The concept was added in Mary where
-- it was hard-coded to 4000 bytes. In Alonzo it was made an updateable protocol parameter (\`_maxValSize\`).
data GetNetworkParametersResponseBody200Maximum_token_bundle_size = GetNetworkParametersResponseBody200Maximum_token_bundle_size {
  -- | quantity
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200Maximum_token_bundle_sizeQuantity :: GHC.Types.Double
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200Maximum_token_bundle_size
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["quantity" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Maximum_token_bundle_sizeQuantity obj] : ["unit" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "byte"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["quantity" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Maximum_token_bundle_sizeQuantity obj] : ["unit" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "byte"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200Maximum_token_bundle_size
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200Maximum_token_bundle_size" (\obj -> GHC.Base.pure GetNetworkParametersResponseBody200Maximum_token_bundle_size GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quantity"))
-- | Create a new 'GetNetworkParametersResponseBody200Maximum_token_bundle_size' with all required fields.
mkGetNetworkParametersResponseBody200Maximum_token_bundle_size :: GHC.Types.Double -- ^ 'getNetworkParametersResponseBody200Maximum_token_bundle_sizeQuantity'
  -> GetNetworkParametersResponseBody200Maximum_token_bundle_size
mkGetNetworkParametersResponseBody200Maximum_token_bundle_size getNetworkParametersResponseBody200Maximum_token_bundle_sizeQuantity = GetNetworkParametersResponseBody200Maximum_token_bundle_size{getNetworkParametersResponseBody200Maximum_token_bundle_sizeQuantity = getNetworkParametersResponseBody200Maximum_token_bundle_sizeQuantity}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.security_parameter@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200Security_parameter = GetNetworkParametersResponseBody200Security_parameter {
  -- | quantity
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200Security_parameterQuantity :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200Security_parameter
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["quantity" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Security_parameterQuantity obj] : ["unit" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "block"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["quantity" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Security_parameterQuantity obj] : ["unit" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "block"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200Security_parameter
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200Security_parameter" (\obj -> GHC.Base.pure GetNetworkParametersResponseBody200Security_parameter GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quantity"))
-- | Create a new 'GetNetworkParametersResponseBody200Security_parameter' with all required fields.
mkGetNetworkParametersResponseBody200Security_parameter :: GHC.Types.Int -- ^ 'getNetworkParametersResponseBody200Security_parameterQuantity'
  -> GetNetworkParametersResponseBody200Security_parameter
mkGetNetworkParametersResponseBody200Security_parameter getNetworkParametersResponseBody200Security_parameterQuantity = GetNetworkParametersResponseBody200Security_parameter{getNetworkParametersResponseBody200Security_parameterQuantity = getNetworkParametersResponseBody200Security_parameterQuantity}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.200.content.application\/json.schema.properties.slot_length@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody200Slot_length = GetNetworkParametersResponseBody200Slot_length {
  -- | quantity
  -- 
  -- Constraints:
  -- 
  -- * Minimum  of 0.0
  getNetworkParametersResponseBody200Slot_lengthQuantity :: GHC.Types.Double
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody200Slot_length
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["quantity" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Slot_lengthQuantity obj] : ["unit" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "second"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["quantity" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody200Slot_lengthQuantity obj] : ["unit" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "second"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody200Slot_length
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody200Slot_length" (\obj -> GHC.Base.pure GetNetworkParametersResponseBody200Slot_length GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quantity"))
-- | Create a new 'GetNetworkParametersResponseBody200Slot_length' with all required fields.
mkGetNetworkParametersResponseBody200Slot_length :: GHC.Types.Double -- ^ 'getNetworkParametersResponseBody200Slot_lengthQuantity'
  -> GetNetworkParametersResponseBody200Slot_length
mkGetNetworkParametersResponseBody200Slot_length getNetworkParametersResponseBody200Slot_lengthQuantity = GetNetworkParametersResponseBody200Slot_length{getNetworkParametersResponseBody200Slot_lengthQuantity = getNetworkParametersResponseBody200Slot_lengthQuantity}
-- | Defines the object schema located at @paths.\/network\/parameters.GET.responses.406.content.application\/json.schema@ in the specification.
-- 
-- 
data GetNetworkParametersResponseBody406 = GetNetworkParametersResponseBody406 {
  -- | message: May occur when providing an invalid \'Accept\' header.
  getNetworkParametersResponseBody406Message :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNetworkParametersResponseBody406
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["message" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody406Message obj] : ["code" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "not_acceptable"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["message" Data.Aeson.Types.ToJSON..= getNetworkParametersResponseBody406Message obj] : ["code" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "not_acceptable"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNetworkParametersResponseBody406
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNetworkParametersResponseBody406" (\obj -> GHC.Base.pure GetNetworkParametersResponseBody406 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message"))
-- | Create a new 'GetNetworkParametersResponseBody406' with all required fields.
mkGetNetworkParametersResponseBody406 :: Data.Text.Internal.Text -- ^ 'getNetworkParametersResponseBody406Message'
  -> GetNetworkParametersResponseBody406
mkGetNetworkParametersResponseBody406 getNetworkParametersResponseBody406Message = GetNetworkParametersResponseBody406{getNetworkParametersResponseBody406Message = getNetworkParametersResponseBody406Message}
-- | > GET /network/parameters
-- 
-- The same as 'getNetworkParameters' but accepts an explicit configuration.
getNetworkParametersWithConfiguration :: forall m . Wallet.Common.MonadHTTP m => Wallet.Common.Configuration -- ^ The configuration to use in the request
  -> m (Network.HTTP.Client.Types.Response GetNetworkParametersResponse) -- ^ Monadic computation which returns the result of the operation
getNetworkParametersWithConfiguration config = GHC.Base.fmap (\response_3 -> GHC.Base.fmap (Data.Either.either GetNetworkParametersResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_4 -> Network.HTTP.Types.Status.statusCode status_4 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetNetworkParametersResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                  GetNetworkParametersResponseBody200)
                                                                                                                                                                                              | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 406) (Network.HTTP.Client.Types.responseStatus response) -> GetNetworkParametersResponse406 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                  GetNetworkParametersResponseBody406)
                                                                                                                                                                                              | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_3) response_3) (Wallet.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") "/network/parameters" GHC.Base.mempty)
-- | > GET /network/parameters
-- 
-- The same as 'getNetworkParameters' but returns the raw 'Data.ByteString.ByteString'.
getNetworkParametersRaw :: forall m . Wallet.Common.MonadHTTP m => Wallet.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.Type.ByteString) -- ^ Monadic computation which returns the result of the operation
getNetworkParametersRaw = GHC.Base.id (Wallet.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") "/network/parameters" GHC.Base.mempty)
-- | > GET /network/parameters
-- 
-- The same as 'getNetworkParameters' but accepts an explicit configuration and returns the raw 'Data.ByteString.ByteString'.
getNetworkParametersWithConfigurationRaw :: forall m . Wallet.Common.MonadHTTP m => Wallet.Common.Configuration -- ^ The configuration to use in the request
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.Type.ByteString) -- ^ Monadic computation which returns the result of the operation
getNetworkParametersWithConfigurationRaw config = GHC.Base.id (Wallet.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") "/network/parameters" GHC.Base.mempty)
